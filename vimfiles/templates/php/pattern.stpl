mdoc$
	/**
	 * {{_cursor_}}
	 */

sdoc$
	/** {{_cursor_}} */

(\(.*\))\.if$
	if ({{$1}}) {
		{{_cursor_}}
	}

}\s*(\((.*\))\.elseif$
	} elseif ({{$1}}) {
		{{_cursor_}}
	}

\(\S\+\)\.const$
	const {{$1}} = '{{$1}}';
	{{_cursor_}}

\(\S\+\)\.class$
	class {{$1}}
	{
		{{_cursor_}}
	}

\(\S\+\)\.func\(tion\)\?\.pub\(lic\)\?$
	public function {{$1}} ()
	{
		{{_cursor_}}
	}

\(\S\+\)\.func\(tion\)\?\.pri\(vate\)\?$
	private function {{$1}} ()
	{
		{{_cursor_}}
	}

\(\S\+\)\.func\(tion\)\?\.pro\(tected\)\?$
	protected function {{$1}} ()
	{
		{{_cursor_}}
	}

(\(.\+\))\.foreach$
	foreach ({{$1}}) {
		{{_cursor_}}
	}

(\(.\+\))\.switch$
	switch ({{$1}}) {
		case {{_cursor_}}:
			break;
		default:
			break;
	}

\(\S\+\)\.collect\(ion\)\?$
	collection({{$1}}){{_cursor_}}

dd$
	dd({{_cursor_}});

debug$
	debug({{_cursor_}});

\(\S\+\)\.form\.control$
	$this->Form->control('{{$1}}', ['label' => '{{_cursor_}}'])

\(\S\+\)\.form\.ctrl$
	$this->Form->control('{{$1}}', ['label' => '{{_cursor_}}'])
