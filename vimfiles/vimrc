set encoding=utf-8
scriptencoding utf-8

augroup MyAutoCmd
  au!
augroup END
" autocmd MyAutoCmd QuickFixCmdPost *grep* cwindow

filetype plugin indent on
syntax enable

let g:mapleader = "\<Space>"

if &compatible
  set nocompatible
endif
set number
set signcolumn=yes
set numberwidth=8
set laststatus=2
set showcmd
set ruler
set wildmenu
set showmatch
set matchtime=1
set list
set listchars=tab:¦\ ,trail:･,extends:>,precedes:<
set backspace=indent,eol,start
set title
set whichwrap=b,s,[,],<,>
set nocursorline
aut InsertLeave * se cursorline!
set fenc=utf-8
set nobackup
set noswapfile
set novisualbell
set wildmode=list:longest
set tabstop=2
set shiftwidth=2
set expandtab
set softtabstop=0
set showtabline=2
set t_Co=256
set mouse=
set incsearch
set hlsearch
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"
if has("termguicolors")
  set termguicolors
endif
set noshowmode
set background=dark
set ignorecase
set smartcase
set autoindent

call plug#begin('~/.vim/plugged')

Plug 'editorconfig/editorconfig-vim'
Plug 'easymotion/vim-easymotion'
Plug 'airblade/vim-gitgutter'
Plug 'itchyny/lightline.vim'
Plug 'mattn/vim-findroot'
Plug 'tpope/vim-repeat'
Plug 'cohama/lexima.vim'
Plug 'wellle/targets.vim'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'Matt-A-Bennett/vim-surround-funk'
Plug 'mhinz/vim-startify'
Plug 't9md/vim-choosewin'
Plug 'preservim/nerdtree'

" Plug 'vim-denops/denops.vim'
" Plug 'Shougo/ddc.vim'
" Plug 'Shougo/pum.vim'
" Plug 'Shougo/ddc-around'
" Plug 'Shougo/ddc-matcher_head'
" Plug 'Shougo/ddc-sorter_rank'
" Plug 'shun/ddc-vim-lsp'
" Plug 'prabirshrestha/vim-lsp'
" Plug 'mattn/vim-lsp-settings'
" Plug 'matsui54/ddc-buffer'
" Plug 'matsui54/denops-popup-preview.vim'

Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'hrsh7th/vim-vsnip'
Plug 'hrsh7th/vim-vsnip-integ'
Plug 'rafamadriz/friendly-snippets'

Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'prabirshrestha/asyncomplete-buffer.vim'

Plug 'ctrlpvim/ctrlp.vim'
Plug 'mattn/ctrlp-matchfuzzy'
Plug 'prabirshrestha/quickpick.vim'
Plug 'prabirshrestha/quickpick-lsp.vim'
Plug 'mhinz/vim-grepper'
" Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
" Plug 'junegunn/fzf.vim'

Plug 'sheerun/vim-polyglot'
Plug 'ayu-theme/ayu-vim'
Plug 'Erichain/vim-monokai-pro'
Plug 'sainnhe/sonokai'
Plug 'Mangeshrex/everblush.vim'
Plug 'tomasiser/vim-code-dark'
Plug 'patstockwell/vim-monokai-tasty'
Plug 'sickill/vim-monokai'
Plug 'tomasr/molokai'

call plug#end()

autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)')) | PlugInstall --sync | q | endif

" Load configrations
let s:plugs = get(s:, 'plugs', get(g:, 'plugs', {}))
function! FindPlugin(name) abort
  return has_key(s:plugs, a:name) ? isdirectory(s:plugs[a:name].dir) : 0
endfunction
command! -nargs=1 UsePlugin if !FindPlugin(<args>) | finish | endif

runtime! configs/*.vim
