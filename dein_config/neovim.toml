# For NeoVim
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'

[[plugins]]
repo = 'Shougo/defx.nvim'
on_cmd = 'Defx'
hook_add = '''
  nnoremap <silent> <Leader>e :<C-u>Defx
    \ -resume
    \ -listed
    \ -split=floating
    \<CR>

  autocmd FileType defx call s:defx_my_settings()
  function! s:defx_my_settings() abort
    " Define mappings
    nnoremap <silent><buffer><expr> <CR>
      \ defx#is_directory() ?
      \ defx#do_action('open_directory') :
      \ defx#do_action('multi', ['drop', 'quit'])
    nnoremap <silent><buffer><expr> E
      \ defx#is_directory() ?
      \ defx#do_action('open_directory') :
      \ defx#do_action('multi', [['open', 'vsplit'], 'quit'])
    nnoremap <silent><buffer><expr> e
      \ defx#is_directory() ?
      \ defx#do_action('open_directory') :
      \ defx#do_action('multi', [['open', 'split'], 'quit'])
    " nnoremap <silent><buffer><expr> P
    "   \ defx#is_directory() ?
    "   \ defx#do_action('open_directory') :
    "   \ defx#do_action('multi', [['open', 'pedit'], 'quit'])
    nnoremap <silent><buffer><expr> o
      \ defx#do_action('open_or_close_tree')
    nnoremap <silent><buffer><expr> c
      \ defx#do_action('copy')
    nnoremap <silent><buffer><expr> m
      \ defx#do_action('move')
    nnoremap <silent><buffer><expr> p
      \ defx#do_action('paste')
    nnoremap <silent><buffer><expr> l
      \ defx#do_action('open_tree')
    nnoremap <silent><buffer><expr> h
      \ defx#do_action('close_tree')
    nnoremap <silent><buffer><expr> K
      \ defx#do_action('new_directory')
    nnoremap <silent><buffer><expr> N
      \ defx#do_action('new_file')
    nnoremap <silent><buffer><expr> M
      \ defx#do_action('new_multiple_files')
    nnoremap <silent><buffer><expr> C
      \ defx#do_action('toggle_columns',
      \                'mark:indent:icon:filename:type:size:time')
    nnoremap <silent><buffer><expr> S
      \ defx#do_action('toggle_sort', 'time')
    nnoremap <silent><buffer><expr> d
      \ defx#do_action('remove')
    nnoremap <silent><buffer><expr> r
      \ defx#do_action('rename')
    nnoremap <silent><buffer><expr> !
      \ defx#do_action('execute_command')
    nnoremap <silent><buffer><expr> x
      \ defx#do_action('execute_system')
    nnoremap <silent><buffer><expr> yy
      \ defx#do_action('yank_path')
    nnoremap <silent><buffer><expr> .
      \ defx#do_action('toggle_ignored_files')
    nnoremap <silent><buffer><expr> ;
      \ defx#do_action('repeat')
    nnoremap <silent><buffer><expr> ~
      \ defx#do_action('cd')
    nnoremap <silent><buffer><expr> q
      \ defx#do_action('quit')
    nnoremap <silent><buffer><expr> <Space>
      \ defx#do_action('toggle_select') . 'j'
    nnoremap <silent><buffer><expr> *
      \ defx#do_action('toggle_select_all')
    nnoremap <silent><buffer><expr> j
      \ line('.') == line('$') ? 'gg' : 'j'
    nnoremap <silent><buffer><expr> k
      \ line('.') == 1 ? 'G' : 'k'
    nnoremap <silent><buffer><expr> <C-l>
      \ defx#do_action('redraw')
    nnoremap <silent><buffer><expr> <C-g>
      \ defx#do_action('print')
    nnoremap <silent><buffer><expr> cd
      \ defx#do_action('change_vim_cwd')
  endfunction
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
on_event = 'InsertEnter'
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1
    let g:deoplete#enable_smart_case = 1

    " <TAB>: completion.
    imap <silent><expr> <TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : deoplete#mappings#manual_complete()
    function! s:check_back_space() abort
        let col = col('.') - 1
        return !col || getline('.')[col - 1]  =~ '\s'
    endfunction

    " <S-TAB>: completion back.
    inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  " keymap
  " nnoremap <silent> <Leader>g  :<C-u>Denite grep:. -buffer-name=search-buffer<CR>
  " nnoremap <silent> <Leader>cg :<C-u>Denite grep:. -buffer-name=search-buffer<CR><C-R><C-W>
  " nnoremap <silent> <Leader>r  :<C-u>DeniteResume search-buffer<CR>
  " nnoremap <silent> <Leader>b  :<C-u>Denite buffer<CR>
  " nnoremap <silent> <Leader>m  :<C-u>Denite mark<CR>

  " 【Ctrl + d + a】 カレントディレクトリとバッファを表示
  nnoremap <silent><C-d>a :<C-u>Denite file buffer -split=floating file:new<CR>
  " 【Ctrl + d + b】 バッファを表示
  nnoremap <silent><C-d>b :<C-u>Denite buffer -split=floating file:new<CR>
  " 【Ctrl + d + f】 カレントディレクトリを表示
  nnoremap <silent><C-d>f :<C-u>Denite file -split=floating file:new<CR>
  " 【Ctrl + d + r】 カレントディレクトリ以下を再帰的に表示
  nnoremap <silent><C-d>r :<C-u>Denite file/rec -split=floating file:new<CR>
  " 【Ctrl + d + gr】 カレントディレクトリ以下のファイルから指定した文字列を検索
  nnoremap <silent><C-d>gr :<C-u>Denite grep -buffer-name=search<CR>
  " 【Ctrl + d + ,】 カレントディレクトリ以下のファイルからカーソル下の文字列を検索
  nnoremap <silent><C-d>, :<C-u>DeniteCursorWord grep -buffer-name=search line<CR>
  " 【Ctrl + d + gs】 grepした結果を再表示
  nnoremap <silent><C-d>gs :<C-u>Denite -resume -buffer-name=search<CR>
  " 【Ctrl + d + c】 Neovim内で実行したコマンドを表示
  nnoremap <silent><C-d>c :<C-u>Denite command_history -split=floating<CR>

  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
    " 【o】 ファイルを開く
    nnoremap <silent><buffer><expr> o
    \ denite#do_map('do_action')
    " 【s】 ウィンドウを水平分割してファイルを開く
    nnoremap <silent><buffer><expr> s
    \ denite#do_map('do_action', 'split')
    " 【v】 ウィンドウを垂直分割してファイルを開く
    nnoremap <silent><buffer><expr> v
    \ denite#do_map('do_action', 'vsplit')
    " 【d】 ファイルを削除する
    nnoremap <silent><buffer><expr> d
    \ denite#do_map('do_action', 'delete')
    " 【p】 ファイルをプレビュー画面で開く
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    " 【ESC】 / 【q】 denite.nvimを終了する
    nnoremap <silent><buffer><expr> <Esc>
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
    " 【i】 ファイル名で検索する
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    " 【SPACE】 ファイルを複数選択する
    nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
  endfunction

  autocmd FileType denite-filter call s:denite_filter_my_settings()
  function! s:denite_filter_my_settings() abort
    imap <silent><buffer> <C-o> <Plug>(denite_filter_quit)
  endfunction
'''
